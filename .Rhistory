chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("AIDS"), -AIDSDATE, AIDSDATE) -> aidsWide
aidsWide %>%
mutate_at(vars(starts_with("AIDS")), as.character) %>%
gather(variable, value, AIDSD1:AIDSDIAG38) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(AIDSD)&is.na(AIDSDIAG))) %>%
ungroup() %>%
mutate(rndAIDSD = as.Date(AIDSD)+randomDays) %>%
select(-randomDays, -AIDSD) %>%
{. ->> aidsLong}
View(aidsLong)
View(rnaLong)
rnaWide %>%
mutate_at(vars(starts_with("RNA")), as.character) %>%
gather(variable, value, RNA1:RNAD169) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(RNAD)&is.na(RNA))) %>%
ungroup() %>%
mutate(rndRNAD = as.Date(RNAD)+randomDays) %>%
select(-randomDays, -RNAD) %>%
{. ->> rnaLong}
View(rnaLong)
View(cd4Long)
cd4Wide %>%
mutate_at(vars(starts_with("CD4")), as.character) %>%
# gather(varA, valA, CD4A1:CD4A180) %>%
# gather(varD, valD, CD4D1:CD4D180) %>%
gather(variable, value, CD4A1:CD4D180) %>%
separate(variable, c("var", "timepoint"), sep=4) %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(CD4D)&is.na(CD4))) %>%
ungroup() %>%
mutate(rndCD4D = as.Date(CD4D)+randomDays) %>%
select(-randomDays, -CD4D) %>%
{. ->> cd4Long}
cd4Wide %>%
mutate_at(vars(starts_with("CD4")), as.character) %>%
# gather(varA, valA, CD4A1:CD4A180) %>%
# gather(varD, valD, CD4D1:CD4D180) %>%
gather(variable, value, CD4A1:CD4D180) %>%
separate(variable, c("var", "timepoint"), sep=4) %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(CD4D)&is.na(CD4A))) %>%
ungroup() %>%
mutate(rndCD4D = as.Date(CD4D)+randomDays) %>%
select(-randomDays, -CD4D) %>%
{. ->> cd4Long}
View(cd4Long)
View(cancLong)
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("CANC")) -> cancWide
cancWide %>%
mutate_at(vars(starts_with("CANC")), as.character) %>%
gather(variable, value, CANCBEF1:CANCTYPE31) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint, CANCDATE, CANCSPEC) %>%
mutate(rndCANCDATE = as.Date(CANCDATE)+randomDays) %>%
select(-randomDays, -CANCDATE) %>%
{. ->> cancLong}
View(cancLong)
## === Extract cancer diagnosis information === ##
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("CANC")) -> cancWide
cancWide %>%
mutate_at(vars(starts_with("CANC")), as.character) %>%
gather(variable, value, CANCBEF1:CANCTYPE31) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
select(!!commonVars, CANCDATE, CANCSPEC) %>%
mutate(rndCANCDATE = as.Date(CANCDATE)+randomDays) %>%
select(-randomDays, -CANCDATE) %>%
{. ->> cancLong}
View(cancLong)
cancWide %>%
mutate_at(vars(starts_with("CANC")), as.character) %>%
gather(variable, value, CANCBEF1:CANCTYPE31) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
select(!!commonVars, CANCDATE, CANCSPEC) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(CANCDATE)&is.na(CANCSPEC))) %>%
ungroup() %>%
mutate(rndCANCDATE = as.Date(CANCDATE)+randomDays) %>%
select(-randomDays, -CANCDATE) %>%
{. ->> cancLong}
View(cancLong)
View(cd4Long)
## ===================================== ##
## Some general questions about the data
## Where do the number of repeated measurements for given variables come from?
## For example:
## 38 AIDSD,
## 31 CANCDATE and other cancer related variables
## 180 CD4
## 111 DRUG
## 169 RNA
## Simply from the largest number of available measurements for each variable,
## and following transformation from long to wide (rectangularization)
## ===================================== ##
library(readr)
library(dplyr)
library(tidyr)
library(tibble)
library(haven) ## for reading sas datasets
library(stringr)
library(magrittr)
## Do not read the csv file, since it is incompletely exported from sas√ü
## chipData <- read_csv("jData/jLabor/2019_Harvard_HIVcausalinference/dataCHIP/chipData.csv")
## read directly the sas file with read_sas function from haven package
## setwd("~/jData/jLabor/2019_Harvard_HIVcausalinference/dataCHIP")
## chipData <- read_sas("alldad17_new_hb_2018dec04.sas7bdat")
## setwd("~/jData/jLabor/2019_Harvard_HIVcausalinference/codes4CHIP_DAD/dadRcodes")
## chipNames <- names(chipData)
## tail(chipNames, 200)
## chipData %>% sample_n(1000) -> chipSample
## write_csv(chipSample, "chipSample.csv")
## chipData %>% sample_n(254) %>% t %>% data.frame %>% rownames_to_column -> chip255
## write_csv(chip255, "chip255.csv")
chipSample <- read_csv("chipSample.csv")
# chipSample %>%
#   select(patient, cohort) %>%
#   mutate(patcoh = paste0(patient, "coh", cohort),
#          patID = paste0("pat_", row_number()),
#          randomDays = sample(365, 1000, replace=TRUE)) -> chipNewID
## ================================================================ ##
## Redefine patient ID to the form pat_xxx,
## sufficient to use row_number since we have one record per patient initially
## Define a random number of days to add to all dates for a patient
## ================================================================ ##
chipSample %<>% mutate(patID = paste0("pat_", row_number()),
randomDays = sample(365, 1000, replace=TRUE),
rndBdate = BASEDATE + randomDays)
jN <- 20 ## number of patients to extract
commonVars <- c("patID", "randomDays", "rndBdate") ## "patient", "cohort", "BASEDATE"
## ======================================================== ##
## The filter statement in the wide to long transformation
## has the purpose to eliminate the NAs
## which had been introduced in the previous reverse transformation
## ======================================================== ##
## === Extract CD4 data and transform to long format === ##
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("CD4"), -CD4GRP) -> cd4Wide
## starts_with("patient"), starts_with("cohort")
cd4Wide %>%
mutate_at(vars(starts_with("CD4")), as.character) %>%
# gather(varA, valA, CD4A1:CD4A180) %>%
# gather(varD, valD, CD4D1:CD4D180) %>%
gather(variable, value, CD4A1:CD4D180) %>%
separate(variable, c("var", "timepoint"), sep=4) %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(CD4D)&is.na(CD4A))) %>%
ungroup() %>%
mutate(rndCD4D = as.Date(CD4D)+randomDays) %>%
select(-randomDays, -CD4D) %>%
{. ->> cd4Long}
## === Extract RNA data and transform to long format === ##
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("RNA"), -RNAGRP) -> rnaWide
rnaWide %>%
mutate_at(vars(starts_with("RNA")), as.character) %>%
gather(variable, value, RNA1:RNAD169) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(RNAD)&is.na(RNA))) %>%
ungroup() %>%
mutate(rndRNAD = as.Date(RNAD)+randomDays) %>%
select(-randomDays, -RNAD) %>%
{. ->> rnaLong}
## === Extract AIDS diagnosis information === ##
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("AIDS"), -AIDSDATE, AIDSDATE) -> aidsWide
aidsWide %>%
mutate_at(vars(starts_with("AIDS")), as.character) %>%
gather(variable, value, AIDSD1:AIDSDIAG38) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(AIDSD)&is.na(AIDSDIAG))) %>%
ungroup() %>%
mutate(rndAIDSD = as.Date(AIDSD)+randomDays) %>%
select(-randomDays, -AIDSD) %>%
{. ->> aidsLong}
## === Get AIDSDATE from demo table == ##
## If we only need the date of AIDS diagnosis we can probably take AIDSDATE from the demo table
## However, it is not clear to me what is the relationship between AIDSDATE and AIDSD
## since there seem to be some inconsistencies where AIDSDATE is after the first AIDSD
chipSample %>%
slice(1:jN) %>%
mutate(rndAIDSDATE = AIDSDATE+randomDays) %>%
select(!!commonVars, AIDSDATE, PREVAIDS, -randomDays) %>%
## select(!!commonVars, AIDSDATE, PREVAIDS) %>%
{.->> aidsDemo}
## === Extract death data === ##
chipSample %>%
slice(1:jN) %>%
mutate(rndDEADD = DEADD+randomDays) %>%
select(!!commonVars, DEADD, DEADDATE, -randomDays) %>%
## select(!!commonVars, DEADD, DEADDATE) %>%
{.->> deathDates}
## === Extract cancer diagnosis information === ##
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("CANC")) -> cancWide
cancWide %>%
mutate_at(vars(starts_with("CANC")), as.character) %>%
gather(variable, value, CANCBEF1:CANCTYPE31) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
select(!!commonVars, CANCDATE, CANCSPEC) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(CANCDATE)&is.na(CANCSPEC))) %>%
ungroup() %>%
mutate(rndCANCDATE = as.Date(CANCDATE)+randomDays) %>%
select(-randomDays, -CANCDATE) %>%
{. ->> cancLong}
## === Extract ART treatment table, eventually we will need it as one record per patient === ##
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars,
starts_with("DRUG"),
starts_with("DSTART"),
starts_with("DSTOP")) -> artWide
artWide %>%
mutate_at(vars(starts_with("DRUG")), as.character) %>%
mutate_at(vars(starts_with("DSTART")), as.character) %>%
mutate_at(vars(starts_with("DSTOP")), as.character) %>%
gather(variable, value, DRUG1:DSTOP111) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
group_by(patID) %>%
filter(row_number()==1 | !(is.na(DRUG)&is.na(DSTART)&is.na(DSTOP))) %>%
ungroup() %>%
mutate(rndDSTART = as.Date(DSTART)+randomDays,
rndDSTOP = as.Date(DSTOP)+randomDays) %>%
select(-randomDays, -DSTART, -DSTOP) %>%
{. ->> artLong}
##  https://stackoverflow.com/questions/34842528/separating-column-using-separate-tidyr-via-dplyr-on-a-first-encountered-digit
##  str_split("rna123", "(?<=[a-z]) ?(?=[0-9])")
##  https://regexr.com/
##  https://regex101.com/r/tC4pM1/1
##  https://www.garrickadenbuie.com/project/regexplain/
## Antiretroviral drug codes
## https://hivdb.stanford.edu/TCEs/pages/drug_code.html
## Extract drug codes from SAS program
onVar <- str_split("ONOTHNUC=0; ONAZT=0; ONDDC=0; ONDDI=0; OND4T=0; ONTTC=0; ONABC=0; ONTDF=0; ONFTC=0; ONOTHNN=0; ONNVP=0; ONDLV=0; ONEFV=0; ONETV=0; ONLOV=0; ONRPV=0; ONSHG=0; ONSSG=0; ONSDK=0; ONSAQ=0; ONIDV=0; ONRTV=0; ONNFV=0; ONAPV=0; ONLPV=0; ONAZV=0;ONTPV=0; ONDRV=0; ONOTHPI=0; ONRTG=0; ONEVG=0; ONDTG=0; ONOTHII=0; ONT20=0; ONVIC=0; ONMVC=0; ONCOBI=0; ONOTHART", "=0;")
onVar <- data.frame(drugCode=sapply(onVar, str_remove, "^.*ON"))
write_csv(onVar, "onVar.csv")
## Extract mapping from SabinCodes to ART drugs from DAD SAS codes
onARTsas <- str_split("(DRUG{J}=100) THEN ONOTHNUC=1; IF (DRUG{J} IN (101,171,174,175,182)) THEN ONAZT=1; IF (DRUG{J}=102) THEN ONDDC=1; IF (DRUG{J}=103) THEN ONDDI=1; IF (DRUG{J} IN (104,177)) THEN OND4T=1; IF (DRUG{J} IN (105,171,172,174,175,177,182,185)) THEN ONTTC=1; IF (DRUG{J} IN (106,172,174,185)) THEN ONABC=1; IF (DRUG{J} IN (107,173,176,178,179,186,187)) THEN ONTDF=1; IF (DRUG{J} IN (109,173,176,178,179,187)) THEN ONFTC=1; IF (DRUG{J} IN (200,224,229,240)) THEN ONOTHNN=1; IF (DRUG{J} IN (201,175,177)) THEN ONNVP=1; IF (DRUG{J} IN (176,187,203)) THEN ONEFV=1; IF (DRUG{J}=204) THEN ONETV=1;  IF (DRUG{J}=222) THEN ONLOV=1; IF (DRUG{J}=202) THEN ONDLV=1; IF (DRUG{J} IN (230,178)) THEN ONRPV=1; IF (DRUG{J}=300) THEN ONSHG=1; IF (DRUG{J}=304) THEN ONSSG=1; IF (DRUG{J}=310) THEN ONSDK=1; IF (DRUG{J} IN (300,304,310)) THEN ONSAQ=1; IF (DRUG{J}=301) THEN ONIDV=1; IF (DRUG{J} IN (181,183,184,302)) THEN ONRTV=1; IF (DRUG{J}=303) THEN ONNFV=1; IF (DRUG{J} IN (305,309,313)) THEN ONAPV=1; IF (DRUG{J} IN (180,182,306)) THEN DO; ONLPV=1; ONRTV=1; END; IF (DRUG{J} IN (181,307)) THEN DO; ONAZV=1; END; IF (DRUG{J}=308) THEN ONTPV=1; IF (DRUG{J} IN (183,184,186,312)) THEN DO; ONDRV=1; ONRTV=1; END; IF (DRUG{J}=399) THEN ONOTHPI=1; IF (DRUG{J} IN (184,575)) THEN ONRTG=1; IF (DRUG{J} IN (185,422,423)) THEN ONDTG=1; IF (DRUG{J} IN (179,577)) THEN ONEVG=1; IF (DRUG{J}=580) THEN ONOTHII=1; IF (DRUG{J} IN (179,591)) THEN ONCOBI=1; IF (DRUG{J}=570) THEN ONMVC=1; IF (DRUG{J}=400) THEN ONT20=1; IF (DRUG{J}=401) THEN ONVIC=1; IF (DRUG{J}=999) THEN ONOTHART=1;", "IF")
artSASextract <- data.frame(sasCode=sapply(onARTsas, str_remove, "^.*DRUG"))
artSASextract %<>%
separate(sasCode, c("number", "drug"), "THEN") %>%
mutate(drug = str_remove(drug, "DO;") ) %>%
mutate(drug = str_remove(drug, "END;") ) %>%
separate(drug, c("drug1", "drug2"), ";", extra="merge") %>%
mutate(drug1=str_remove(drug1, "^.*ON"),
drug2=str_remove(drug2, "^.*ON"),
drug1 = str_remove(drug1, "=1"),
drug2 = str_remove(drug2, "=1;"),
number=str_remove_all(number, "[()IN=\\{J\\}]") ) %>%
separate(number, into = paste0("sabincode_", 1:8), sep=",", fill="right") %>%
select(drug1, drug2, everything())
write_csv(artSASextract, "artSASextract.csv")
artSASextract %>%
gather(variable, value, sabincode_1:sabincode_8) %>%
select(drug1, value) %>%
filter(!is.na(value)) %>%
arrange(value) -> sabincodeART
write_csv(sabincodeART, "sabincodeART.csv")
## === Baseline Smoking, HBV and HCV not needed for initial data management
## === Random transformation to date not applied below
## === Extract HBV information === ##
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("HBV")) -> hbvWide
hbvWide %>%
mutate_at(vars(starts_with("HBV")), as.character) %>%
gather(variable, value, HBVACRES1:HBVRES119) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
{. ->> hbvLong}
## === Extract HCV information === ##
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("HCV")) -> hcvWide
hcvWide %>%
mutate_at(vars(starts_with("HCV")), as.character) %>%
gather(variable, value, HCVARES1:HCVRVAL50) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
{. ->> hcvLong}
## === Extract smoking information === ##
chipSample %>%
slice(1:jN) %>% ## select a small number of observations for code testing
select(!!commonVars, starts_with("SM")) -> smkWide
smkWide %>%
mutate_at(vars(starts_with("SM")), as.character) %>%
gather(variable, value, SMD1:SMK313) %>%
separate(variable, c("var", "timepoint"), sep = "(?<=[a-zA-Z]) ?(?=[0-9])") %>%
arrange(patID) %>%
mutate(timepoint = as.numeric(timepoint)) %>%
arrange(timepoint) %>%
spread(var, value) %>%
select(-timepoint) %>%
{. ->> smkLong}
## =============================================================== ##
## Examples wide to long from
## https://stackoverflow.com/questions/23945350/reshaping-wide-to-long-with-multiple-values-columns
## =============================================================== ##
dw <- read.table(header=T, text='
sbj f1.avg f1.sd f2.avg f2.sd  blabla
A   10    6     50     10      bA
B   12    5     70     11      bB
C   20    7     20     8       bC
D   22    8     22     9       bD
')
dw %>%
gather(v, value, f1.avg:f2.sd) %>%
separate(v, c("var", "col")) %>%
arrange(sbj) %>%
spread(col, value)
## =========================================== ##
## Example modified to include only one f1
dw <- read.table(header=T, text='
sbj f1.avg f1.sd  blabla
A   10    6   bA
B   12    5   bB
C   20    7   bC
D   22    8   bD
')
dw %>%
gather(v, value, f1.avg:f1.sd) %>%
separate(v, c("var", "col")) %>%
arrange(sbj) %>%
spread(col, value)
unique(chipSample$final_underlying)
sqrt(.08*(1-.08))
300(.08*(1-.08))
300*(.08*(1-.08))
sqrt(300*(.08*(1-.08)))
224/4
head(names(chipSample))
View(chipNewID)
head(names(chipSample), 100)
350-273
234+81
315+42
263-192
192+55
simpsonTable <- c(273, 289, 77, 61)
?fisher.test
fisher.test(simpsonTable)
simpsonTable <- matrix(c(273, 289, 77, 61), nrow=2)
fisher.test(simpsonTable)
simpsonTable
simpsonTable <- matrix(c(273, 289, 77, 61), nrow=2, byrow = TRUE)
fisher.test(simpsonTable)
simpsonTable
(273/77)*(61/289)
273+289
273+289
77+61
562+138
?fisher.test
fisher.test(simpsonTable)
name(fisher.test(simpsonTable))
names(fisher.test(simpsonTable))
fisher.test(simpsonTable)$estimate
round(fisher.test(simpsonTable)$estimate,2)
simpsonTable <- matrix(c(289, 273, 61, 77), nrow=2, byrow = TRUE)
round(fisher.test(simpsonTable)$estimate,2)
1/.75
round(fisher.test(t(simpsonTable))$estimate,2)
r round((81/87)*270/234)
round((81/87)*270/234)
round((81/87)*(270/234))
round((81/87)*(270/234), 2)
round((192/263)*(55/80), 2)
round((192/263)*(80/55), 2)
round((81/6)*(36/234), 2)
round((192/71)*(25/55), 2)
fisher.test(matric(c(81, 234, 6, 36), nrow=2, byrow=TRUE))
fisher.test(matrix(c(81, 234, 6, 36), nrow=2, byrow=TRUE))
fisher.test(matrix(c(192, 55, 71, 25), nrow=2, byrow=TRUE))
round(((81/6)*(36/234))^(-1), 2)
(234/36)*(6/81)
sum(c(3,4))
add2numbers
add2numbers <- function(delta,alpha) delta+alpha
add2numbers(267,52)
add2numbers(2678,528)
add2numbers(2678,52889)
add2numbers <- function(delta,alpha) delta+alpha
subtract2numbers <- function(phi,nu) phi-nu
subtract2numbers(232,567)
subtract2numbers(232,32)
library(ggplot2)
n <- 1000
triangle <- c(0, choose(n,0:n), 0)/2^n
triangleData <- data.frame(id = 1:length(triangle)-n/2, triProb=triangle)
ggplot(data=triangleData, aes(x=id, y=triProb)) +
geom_line(colour="blue") +
geom_point(colour="purple") +
labs(y="Proabbility", x="Index")
67/110
78/110
200/300
115/150
235/300
195/250
setwd("~/jData/jLibellus/entryFiles/annlia.github.io/")
serve_site()
library(blogdown)
serve_site()
new_site()
new_site(theme = "kishaningithub/hugo-creative-portfolio-theme")
<!-- new_site(theme = "kakawait/hugo-tranquilpeak-theme") -->
serve_site()
setwd("~/jData/jLibellus/entryFiles/buildSite")
serve_site()
setwd("~/jData/jLibellus/entryFiles/annlia.github.io/")
serve_site()
setwd("~/jData/jLibellus/entryFiles/annlia.github.io_NewerCreative")
serve_site()
setwd("~/jData/jLibellus/entryFiles/annlia.github.io/content/jclub")
serve_site()
?new_content
new_content("jresearch/jresearch.Rmd")
getwd()
setwd("~/jData/jLibellus/entryFiles/annlia.github.io")
new_content("jresearch/jresearch.Rmd")
serve_site()
serve_site()
serve_site()
serve_site()
servr::daemon_stop("4781989304")
serve_site()
daemon_stop()
servr::daemon_stop()
serve_site()
q()
